<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
	<style type="text/css">
	body, html{width: 100%;height: 100%;overflow: hidden;margin:0;font-family:"微软雅黑";}
	div.routepage {width:50%; float:right; height:100%; margin:0}
	#allmap{width: 100%;height: 50%;overflow: hidden;margin:0;font-family:"微软雅黑";}
        body {
            background:url("http://pic.meituba.com/uploads/allimg/2016/05/30/349.jpg");
            background-repeat:no-repeat;
            background-size:cover;
        }
        .pagetitle{
            font-size:60px;
            color:#BBDD11;
            left:10px;
            right:10px;
            height:300px;
            line-height:300px;
            text-align:center;
        }
        .formdiv{
            text-align:center;
        }
        .route_title{
            font-size:24px;
            color:#FFF;
            margin-left:1em;
        }
        .details{
            background:white;
            margin-left:0.5em;
        }
        .singleroute .visit .food .hotel .showallroute{
            margin-left:0.5em;
            font-size:16px;
        }
	</style>
	<link href="/static/css.css" rel="stylesheet" type="text/css" />
    <link href="/static/reset.min.css" rel="stylesheet" type="text/css" />
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=H6Yz5pz4fFOQGKb4ROdYjPvzOakOenyv"></script>
	<script src="http://libs.baidu.com/jquery/1.9.0/jquery.js"></script>
	<title>出行路线</title>	
</head>
<body id="main_body">
</body>
</html>
<script type="text/javascript">
    var poiRes = [];
    var titRes = [];
    var time_consume = [];
    var circle = 0;
    function input_page()
    {
    	document.getElementById("main_body").innerHTML = '<div class = "blur">\
    	<div class="pagetitle">旅游路线规划</div>\
    	<div class="formdiv">\
    	<div class = "search1">\
    	<select size = "1" name = "searchType" class = "select">\
    	<option value = "scene">scene</option>\
    	<option value = "food">food</option>\
    	</select>\
    	<input type = "text" name = "pointname" id = "pointname" class="txtingput"/ >\
    	<input type = "button" name = "button" id = "button"  value = "提交" class="txtbutton"/ >\
    	</div>\
    	<textarea rows = "10" cols = "100" type = "text" name = "trytext" id = "trytext"></textarea></br>\
    	<div class = "search1">\
    	<input type = "button" name = "finish" id = "finish" value = "完成"/ class="txtbutton">\
    	</div>\
    	<div id = "RESULT">\
    	</div>';
    	var points = [];
    	var poiTitle = [];
    	var PointRes=new Array();
    	var TitleRes=new Array();
    	var stpoint = new BMap.Point(200,200);
    	var edpoint = new BMap.Point(200,200);
    	function submitText()
    	{
        	var pointname = document.getElementById("pointname");
        	var trytext = document.getElementById("trytext");
        	var str = pointname.value
        	var options = {
        	    onSearchComplete:function(results){
        	        if (localsearch.getStatus() == BMAP_STATUS_SUCCESS){
        	            points.push(results.getPoi(0).point);
                	    poiTitle.push(results.getPoi(0).title);
                	    if (points.length == 1) {trytext.value += " （起点） "; stpoint = results.getPoi(0).point;}
        		    else
        		    {
        		    	trytext.value = trytext.value.replace("终点","途经");
        		    	trytext.value += " （终点） ";
        		    	if (points[points.length - 1].equals(points[0])) 
        		    	{
        		    		circle = 1; 
        		    		points.pop(); 
        		    		poiTitle.pop(); 
        		    	}
        		    	else edpoint = results.getPoi(0).point;
        		    }
        		    trytext.value += "\n";
            	   	 }
           	 }
        	};
        	var localsearch = new BMap.LocalSearch("上海",options);
        	localsearch.search(str);
        	trytext.value = trytext.value + str;
        	pointname.value = "";
    	}
		
        \$("#button").click(submitText);
    	function rateBuild(p,pt,stp = new BMap.Point(200,200), edp = new BMap.Point(200,200))
    	{
        	var st = -1;
        	var ed = -1;
        	var n = p.length;
        	var res = new Array();
        	var maxdist = -1;
        	var maps =new Array();
        	for (i = 0;i <= n; i++)
        	    maps[i] = new Array();
        	for (i = 0;i < n; i++)
        	{
        	    if (p[i].equals(stp)) st = i;
        	    if (p[i].equals(edp)) ed = i;
        	}
        	for (i = 0; i < n; i++)
        	for (j = i; j < n; j++)
        	{
        	    maps[i][j]=Math.sqrt((p[i].lng-p[j].lng)*(p[i].lng-p[j].lng)+(p[i].lat-p[j].lat)*(p[i].lat-p[j].lat));
        	    maps[j][i] = maps[i][j];
        	    if (maps[i][j] > maxdist)
        	        maxdist = maps[i][j];
        	}
        	
        	var resdist = 999999;
        	for (i = 0; i < n; i++)
        	{
        	    if (st != -1 && i != st) continue;
        	    var rate = new Array();
        	    rate[0] = i;
        	    var now = i;
        	    var distance = 0;
        	    while (rate.length < n)
        	    {
        	        var mindist = maxdist + 1;
        	        var mini = -1;
        	        for (j = 0; j < n; j++)
        	        {
        	            var f = true;
        	            for (k = 0; k < rate.length; k++)
        	            {
        	                if (j == rate[k]){f = false; break;}
        	            }
        	            if (!f) continue;
        	            if (ed != -1 && j == ed && rate.length < n - 1) continue;
        	            if (maps[now][j] <= mindist)
        	            {
        	                mindist = maps[now][j];
        	                mini = j;
        	            }
        	        }
        	        rate[rate.length] = mini;
        	        now = mini;
        	        distance += mindist;
        	    }
        	    if (distance < resdist)
            	{
                	resdist = distance;
                	res = rate;
            	}
            
        	}
        	for (i = 0; i < n; i++)
        	{
        	    PointRes[i] = p[res[i]];
        	    TitleRes[i] = pt[res[i]];
        	}
        	return [PointRes,TitleRes];
    	}
    
    	function finish()
    	{
    	    var res = rateBuild(points,poiTitle,stpoint,edpoint);
    	    poiRes = res[0];
    	    titRes = res[1];
    	    if (circle)
    	    {
    	    	poiRes.push(poiRes[0]);
    	    	titRes.push(titRes[0]);
    	    }
    	    console.log(titRes);
    	    //var s = [];
    	    //for (i = 0; i < poiRes.length; i++)
    	    //    s.push(titRes[i] + " , " + poiRes[i].lng + "," + poiRes[i].lat);
    	    //document.getElementById("RESULT").innerHTML=s.join("</br>");
	    route_page();
    	}
    	\$("#finish").click(finish);
    
    	document.onkeydown=keyListener;
    	function keyListener(e)
    	{
    	    if (e.keyCode == 13)
    	    {
    	         submitText();
    	    }
    	}
   }
    

	function route_page() {
		
		document.getElementById('main_body').innerHTML = '\
			<div class="routepage">\
				<div id="allmap"></div>\
				<div style="height:10%; width:500%">\
					<strong class="route_title" id="moreinfo">正在为您生成行程安排，请稍候。。。</strong>\
				</div>\
				<div id="partialroute"　class="details" style="width:100%;height:40%;overflow:scroll;background:white;margin-left:0.5em;margin-right:0.5em; font-size:20px;">\
				</div>\
			</div>\
			<div class="routepage" >\
				<div style="height:10%; width:100%">\
					<strong class="route_title">您的日程安排</strong>\
				</div>\
				<div id="arranges" class="arranges" style="overflow-y:scroll; overflow-x:hidden; width:100%; height:40%; margin-left:0.5em;font-size:20px;">\
				</div>\
				<div style="height:10%; width:100%" id="allroute_div">\
					<strong class="route_title" id="allroute_title">交通汇总</strong>\
				</div>\
				<div id="allroutes" class="traffic" style="overflow-y:scroll;　overflow-x:hidden; width:100%; height:40%; background:white; margin-left:0.5em;margin-right:0.5em;font-size:20px;">\
				</div>\
			</div>\
			';
	
		//map initialization
		var city_name = "上海";
		var map = new BMap.Map("allmap");
		map.centerAndZoom(city_name);

		map.addControl(new BMap.MapTypeControl({
			mapTypes:[
				BMAP_NORMAL_MAP,
				BMAP_HYBRID_MAP
			]}));	  
		map.setCurrentCity(city_name);
		map.enableScrollWheelZoom(true);  
		//map.disableDragging(true);
		//map.disableKeyboard(true);
		
		//transit route initialization
		var route_policy = [BMAP_TRANSIT_POLICY_LEAST_TIME,
							BMAP_TRANSIT_POLICY_LEAST_TRANSFER,
							BMAP_TRANSIT_POLICY_LEAST_WALKING,
							BMAP_TRANSIT_POLICY_AVOID_SUBWAYS];
		
		var places = poiRes;
		var place_names = titRes;
		
		
		var route_options = {
				onSearchComplete: function (results) {
					if (transit_single.getStatus() == BMAP_STATUS_SUCCESS) {
						var description = [];
						for (var i = 0; i < results.getNumPlans(); i++) {
							description.push("<strong>方案"+String(i+1)+"</strong><br />");
							description.push(results.getPlan(i).getDescription());
							description.push("<i>预计花费时间："+results.getPlan(i).getDuration(true)+"</i><br /><br />");
						}
						document.getElementById('partialroute').innerHTML = description.join('');
					}
				},
				renderOptions: {map: map},
				policy:0,
			};
		
		var transit_single = new BMap.TransitRoute(map, route_options);

		var simple_search_options = {
			onSearchComplete: function(results) {
				map.clearOverlays();
			},
			renderOptions: {map: map, panel: "partialroute"},
		}

		var simple_search = new BMap.LocalSearch(map, simple_search_options);

		run();
		
		function run () {
			setTimeout(total_route_search, 1000);
		}
		//$("#run").click(total_route_search);	
		
		function single_route_search(start, end, policy = route_policy[0]) {
			transit_single.setPolicy(policy);
			transit_single.search(start, end);
		}
		
		function create_button(num1, num2, area) {
			var but = document.createElement('input');
			var br = document.createElement('br');
			but.type = 'button';
			but.value = titRes[num1]+' 到 '+titRes[num2];
			but.class = 'singleroute';
			function click () {
				console.log('num1', num1);
				single_route_search(poiRes[num1], poiRes[num2]);
			}
			if (but.attachEvent) {
				but.attachEvent('click', click);
			} else {
				but.addEventListener('click', click);
			}
			//document.getElementById(area).appendChild(br);
			document.getElementById(area).appendChild(but);
		}
		
		function create_visit_button(num, area) {
			var but = document.createElement('input');
			var br = document.createElement('br');
			but.type = 'button';
			but.value = "参观 " + titRes[num];
			but.class = 'visit';
			
			var marker_options = {
			};
			
			if (but.attachEvent) {
				but.attachEvent('click', visitbutton);
			} else {
				but.addEventListener('click', visitbutton);
			}
			
			//document.getElementById(area).appendChild(br);
			document.getElementById(area).appendChild(but);
			
			function visitbutton() {
				map.clearOverlays();
				map.setCenter(poiRes[num]);
				var marker = new BMap.Marker(poiRes[num], marker_options);
				map.addOverlay(marker);
				marker.openInfoWindow(new BMap.InfoWindow(titRes[num]));
				map.setZoom(17);
			}
		}
		
		function create_food_button(num, area) {
			var but = document.createElement('input');
			var br = document.createElement('br');
			but.type = 'button';
			but.value = titRes[num] + "附近美食";
			but.class = 'food';
			
			if (but.attachEvent) {
				but.attachEvent('click', foodbutton);
			} else {
				but.addEventListener('click', foodbutton);
			}
			
			//document.getElementById(area).appendChild(br);
			document.getElementById(area).appendChild(but);
			
			function foodbutton() {
				simple_search.searchNearby("美食", poiRes[num]);
			}
		}
		
		function create_hotel_button(num, area) {
			var but = document.createElement('input');
			var br = document.createElement('br');
			but.type = 'button';
			but.value = titRes[num] + "附近酒店";
			but.class = 'hotel';
			
			if (but.attachEvent) {
				but.attachEvent('click', hotelbutton);
			} else {
				but.addEventListener('click', hotelbutton);
			}
			
			//document.getElementById(area).appendChild(br);
			document.getElementById(area).appendChild(but);
			
			function hotelbutton() {
				simple_search.searchNearby("住宿", poiRes[num]);
			}
		}
		
		function total_route_search() {
			if (places.length < 2) {
				alert('Not enough places');
				return;
			}
			var descriptions = [];
			
			var ind = 0;
			var term = 1;
			var transit_result = '';
			//document.getElementById("test").disabled = "disabled";
			
			function timeArrange(trip,triptit,timeConsume,timeVisit = new Array(0))
			{
				var h = 8;
				var m = 0;
				var res = new Array();
				var resTime = [];
				var haveLunch = 0;
				if (timeVisit.length ==0)
				{
					for (i = 0; i < trip.length; i++)
					timeVisit[i] = 7200;
				}
				function num2time(h, m)
				{
					var s = "";
					if (h < 10) s = s + "0" + String(h);
					else s = s + String(h);
					s=s+":";
					if (m < 10) s = s + "0" + String(m);
					else s = s + String(m);
					return s;
				}
				for (i = 0; i < 2 * trip.length - 1; i++)
				{
					res[i] = i % 2;
					resTime[i] = num2time(h,m) + "-";
					if (res[i])
					{
						hour = parseInt(timeConsume[parseInt(i/2)] / 3600);
						minute = parseInt((timeConsume[parseInt(i/2)] % 3600) / 60);
						h = h + hour + parseInt((minute + m) / 60);
						m = (minute + m) % 60;
						if ((11 <= h && h <= 12) || (h == 13 && m < 30) && !(haveLunch))
						{
							res[i] += 2;
							h = 14;
							m = 0;
							haveLunch = 1;
						}
						else if (h >= 18)
						{
							res[i] += 4;
							h = 25;
							m = 0;
							haveLunch = 0;
						}
					}
					else
					{
						hour = parseInt(timeVisit[parseInt(i/2)] / 3600);
						minute = parseInt((timeVisit[parseInt(i/2)] % 3600) / 60);
						h = h + hour + parseInt((minute + m) / 60);
						m = (minute + m) % 60;
						if (h >= 14 && !(haveLunch))
						{
							h = h + 1;
							haveLunch = 1;
							res[i] += 2;
						}
						if ((11 <= h && h <= 12) || (h == 13 && m < 30) && !(haveLunch))
						{
							res[i] += 2;
							h = 14;
							m = 0;
							haveLunch = 1;
						}
						else if (h >= 18)
						{
							res[i] += 4;
							h = 25;
							m = 0;
							haveLunch = 0;
						}
					}
				if (h < 25) resTime[i] = resTime[i] + num2time(h,m);
				else {h = 8; resTime[i] = resTime[i] + "当天结束";}
				}
			if (circle)
			{
				res.pop();
				resTime.pop();
			}
			return [res,resTime];
			}
			
			function showResult() {
				var htmlcode = "";
				var day = 0;
				for (i = 0; i < timearr[1].length; i++)
				{
					var tmarr = document.createElement('text');
					var br = document.createElement('br');
					if (i == 0 || (i > 0 && timearr[0][i - 1] >= 4)) 
					{
						day = day + 1; 
						tmarr.innerHTML = "第" + day + "天：</br>";
					}
					tmarr.innerHTML += timearr[1][i];
					document.getElementById('arranges').appendChild(tmarr);
					if (timearr[0][i] % 2 == 1) create_button(parseInt(i/2), parseInt(i/2)+1, 'arranges');
					else create_visit_button(parseInt(i/2), 'arranges');
					if (timearr[0][i] >= 2) create_food_button(parseInt((i+1)/2),'arranges');
					if (timearr[0][i] >= 4) create_hotel_button(parseInt((i+1)/2),'arranges');
					document.getElementById('arranges').appendChild(br);
				}
				
				var route_description = document.createElement('text');
				route_description.innerHTML = descriptions.join('<br />');
				document.getElementById('allroutes').appendChild(route_description);
				
				var show_route_button = document.createElement('input');
				show_route_button.type='button';
				show_route_button.value='在地图上显示';
				show_route_button.class = 'showallroute';
				
				if (show_route_button.attachEvent) {
					show_route_button('click', show_route);
				} else {
					show_route_button.addEventListener('click', show_route);
				}
				
				function show_route() {
					map.clearOverlays();
					map.setCenter('上海');
					map.setZoom(11);
					document.getElementById('partialroute').innerHTML = descriptions.join('<br />');
					for (var ii = 0; ii < total_polylines.length; ii++) {
						map.addOverlay(total_polylines[ii]);
					}
				}
				
				document.getElementById('allroute_div').appendChild(show_route_button);
				
				document.getElementById("moreinfo").innerHTML="详细信息";
				
				show_route();
				
				confirm("行程安排生成完成，您可以点击本页面的按钮查看更详细的行程信息");
			}
			
			var total_polylines = [];
			
			var total_options = {
				onSearchComplete: function (results) {
					if (transit.getStatus() == BMAP_STATUS_SUCCESS) {
						transit_result = results;
						if (term == 0) {
							term = 1;
						} else {
							term = 1;
							var times = [];
							var description = '<strong>'+titRes[ind-1]+' 到 '+titRes[ind]+'</strong><br />';
							if (transit_result.getNumPlans() > 0) {
								description += transit_result.getPlan(0).getDescription();
								for (var i = 0; i < transit_result.getNumPlans(); i ++ ) {
									times.push(transit_result.getPlan(i).getDuration(false));
								}
								
								// add the result of this search to result
								descriptions.push(description);
								var t_consume = 0; //average time consumption
								var j = times.length;
								while(j --) {
									t_consume += times[j];
								}
								time_consume.push(t_consume/times.length);
								
							} else {
								alert("Error! No plans");
							}
						}
					}
					console.log("endcomplete", 0);
				},
				onPolylinesSet: function (lines, routes) {
					console.log("beginpolyline", 0);
					total_polylines = total_polylines.concat(map.getOverlays());
					// begin another search
					ind ++;
					console.log('tindex', ind);
					transit.clearResults();
					if (ind < places.length) {
						console.log('here', 0);
						transit.setPolicy(route_policy[0]);
						transit.search(places[ind-1], places[ind]);
					} else {
						//search complete
						console.log('complete', 0);
						timearr = timeArrange(poiRes,titRes,time_consume);
						
						showResult();
					}
					console.log("endpolyline", 0);
				},
				policy: 0,
				renderOptions: {map: map},
			};
			
			var transit = new BMap.TransitRoute(map, total_options);

			ind ++;
			console.log('index', places[ind]);
			transit.setPolicy(route_policy[0]);
			transit.search(places[ind-1], places[ind]);
		}
	}
	input_page();
</script>
